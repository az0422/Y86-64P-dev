논문 제목: 웹 기반 Y86-64 호환 시뮬레이터
아키텍처 이름: Y86-64+

명령어 세트
기계어 구성
A 타입: icode:ifun
B 타입: icode:ifun, rA:rB
C 타입: icode:ifun, rA:rB, const[8]
D 타입: icode:ifun, const[8]

번호(hex)	명령어			길이	설명
-------------------------------------------------------------------
00	halt			1B	CPU 동작 정지
10	nop					1B	No operation
20	rrmovq rA,rB		2B	register -> register
21	cmovle rA,rB		2B	비교 값이 작거나 같을 때 레지스터의 값을 레지스터로 복사
22	cmovl rA,rB			2B	비교 값이 작을 때 레지스터의 값을 복사
23	cmove rA,rB			2B	비교 값이 같을 때 레지스터의 값을 복사
24	cmovne rA,rB		2B 	비교 값이 같지 않을 때 레지스터의 값을 복사
25	cmovge rA,rB		2B	비교 값이 크거나 같을 때 레지스터의 값을 복사
26	cmovg rA,rB			2B 	비교 값이 클 때 레지스터의 값을 복사
30	irmovq const,rB		10B	레지스터를 정수로 초기화
40	rmmovq rA,D(rB)		10B	레지스터의 값을 메모리로 복사
50	mrmovq D(rB),rA		10B	메모리의 값을 레지스터로 복사
60	addq rA,rB			2B	rB = rB + rA
61	subq rA,rB			2B	rB = rB - rA
62	andq rA,rB			2B	rB = rB & rA
63	xorq rA,rB			2B	rB = rB ^ rA
64	or rA,rB			2B	rB = rB | rA
65	shl rA,rB			2B	rB = rB << rA
66	shr rA,rB			2B	rB = rB >> rA (logical)
68	sar	rA,rB			2B	rA = rB >> rA (arithmetics)
68	cmp rA,rB			2B	null =  rB - rA
69	test rA,rB			2B	null = rB & rA
6A	not	rA,rB			2B	rB = ~rA
70 	jmp const			9B	const로 점프
71	jle const			9B	비교 값이 작거나 같을 때 점프
72	jl const			9B	비교 값이 작을 때 점프
73	je const			9B	비교 값이 같을 때 점프
74	jne const			9B	비교 값이 같지 않을 때 점프
75	jge	const			9B	비교 값이 같거나 클 때 점프
76	jg const			9B	비교 값이 클 때 점프
80	call const			9B	const 위치의 함수 호출
90	ret					1B	함수를 반환
A0	pushq rA			2B	rA의 값을 스택에 저장
B0	popq rA				2B	스택의 값을 rA에 저장

어셈블러 매크로 명령어
어셈블러와 역 어셈블러에서만 사용되는 명령어로 실제 CPU의 동작에는 영향을 주지 않음
해당 메모리 위치를 초기화하지 않고 읽을 경우 임의의 값이 인출 될 수 있음

번호(hex)명령어			길이	설명
-----------------------------------------------------------------
01	.elemrkq const		8B	프로그램에 포함된 8바이트 정수 원소의 개수. 데이터 영역은 7바이트
02	.dummy n			nB	더미 공간을 만들기 위한 매크로. 2 이상의 숫자만 사용 가능
02	.pos n				>= nB	n의 위치로 이동. 비권장 값으로 역 어셈블링시 .dummy로 자동 치환
03	.align 8			nB	8바이트 정렬을 위한 매크로. 값으로 8만 사용 가능
-	.quad n				8B	64비트 정수 원소

레지스터
번호	이름	의미
------------------------------
0	rax	범용(반환)
1 	rcx	범용
2 	rdx	범용
3 	rbx	범용
4 	rsp	스택 포인터
5 	rbp	범용(메모리 주소)
6 	rsi	범용
7 	rdi	범용
8	r8	범용
9 	r9	범용
A 	r10	범용
B 	r11	범용
C 	r12	범용
D 	r13	범용
E 	r14	범용
F 	null	상수 0

상태 플래그
이름		의미
------------------------------
NOP		Non-operation
MEM ERR	Memory Error
HALT	Halt
INS ERR	Instruction Error

연산 플래그 및 조건 코드
이름		의미
------------------------------
ZF		Zero flag
SF		Sign flag
OF		Overflow flag
eql		Equal
grt		Great
les		Less
